mytasks projesinde ilerleme durumu şöyle
backend tarafında aşağıda ki dosya path yapısını oluşturdum
tablolara arasında ki ilişkiler uyumlu
kullanıcı kimlik doğrulama istiyorum
kimlik doğrulama email ve password ile yapılacak
api requirements = asgiref==3.6.0
Django==4.2.1
django-cors-headers==3.14.0
djangorestframework==3.14.0
djangorestframework-simplejwt==5.2.2
PyJWT==2.6.0
pytz==2023.3
sqlparse==0.4.4
tzdata==2023.3
bu isteklerim için dosya path ve settings.py dosyalarını incele ve 
bir 72 maddelik bir iş planı çıkar lütfen

backend
backend\api
backend\api\__pycache__
backend\api\migrations
backend\api\__init__.py
backend\api\admin.py
backend\api\apps.py
backend\api\models.py
backend\api\serializers.py
backend\api\tests.py
backend\api\urls.py
backend\api\views.py
backend\assignment
backend\assignment\__pycache__
backend\assignment\migrations
backend\assignment\__init__.py
backend\assignment\admin.py
backend\assignment\apps.py
backend\assignment\models.py
backend\assignment\serializers.py
backend\assignment\tests.py
backend\assignment\urls.py
backend\assignment\views.py
backend\comment
backend\comment\__pycache__
backend\comment\migrations
backend\comment\__init__.py
backend\comment\admin.py
backend\comment\apps.py
backend\comment\models.py
backend\comment\serializers.py
backend\comment\tests.py
backend\comment\urls.py
backend\comment\views.py
backend\company
backend\company\__pycache__
backend\company\migrations
backend\company\__init__.py
backend\company\admin.py
backend\company\apps.py
backend\company\models.py
backend\company\serializers.py
backend\company\tests.py
backend\company\urls.py
backend\company\views.py
backend\custom_user
backend\custom_user\__pycache__
backend\custom_user\migrations
backend\custom_user\__init__.py
backend\custom_user\admin.py
backend\custom_user\apps.py
backend\custom_user\models.py
backend\custom_user\serializers.py
backend\custom_user\tests.py
backend\custom_user\urls.py
backend\custom_user\views.py
backend\kanban
backend\kanban\__pycache__
backend\kanban\migrations
backend\kanban\__init__.py
backend\kanban\admin.py
backend\kanban\apps.py
backend\kanban\models.py
backend\kanban\serializers.py
backend\kanban\tests.py
backend\kanban\urls.py
backend\kanban\views.py
backend\mytasks
backend\mytasks\__pycache__
backend\mytasks\__init__.py
backend\mytasks\asgi.py
backend\mytasks\settings.py
backend\mytasks\urls.py
backend\mytasks\wsgi.py
backend\notification
backend\notification\__pycache__
backend\notification\migrations
backend\notification\__init__.py
backend\notification\admin.py
backend\notification\apps.py
backend\notification\models.py
backend\notification\serializers.py
backend\notification\tests.py
backend\notification\urls.py
backend\notification\views.py
backend\project
backend\project\__pycache__
backend\project\migrations
backend\project\__init__.py
backend\project\admin.py
backend\project\apps.py
backend\project\models.py
backend\project\serializers.py
backend\project\tests.py
backend\project\urls.py
backend\project\views.py
backend\rating
backend\rating\__pycache__
backend\rating\migrations
backend\rating\__init__.py
backend\rating\admin.py
backend\rating\apps.py
backend\rating\models.py
backend\rating\serializers.py
backend\rating\tests.py
backend\rating\urls.py
backend\rating\views.py
backend\role
backend\role\__pycache__
backend\role\migrations
backend\role\__init__.py
backend\role\admin.py
backend\role\apps.py
backend\role\models.py
backend\role\serializers.py
backend\role\tests.py
backend\role\urls.py
backend\role\views.py
backend\db.sqlite3
backend\manage.py
backend\requirements.txt
# backend\mytasks\settings.py
from pathlib import Path
from django.utils.timezone import timedelta
from corsheaders.defaults import default_headers

BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = 'django-insecure-+3e1%a=eiyms)9@linjiz$ajpb36f50n#qoxr5!cw7&p9m-s92'
DEBUG = True
ALLOWED_HOSTS = ['*']
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 3.part api
    'rest_framework_simplejwt',
    'rest_framework',
    'corsheaders',
    # my api
    'api',
    'assignment',
    'comment',
    'company',
    'custom_user',
    'kanban',
    'notification',
    'project',
    'rating',
    'role',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware", # corshearders block
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000', # React uygulamanızın çalıştığı adres
    'http://localhost',
    'http://127.0.0.1',
    'http://0.0.0.0',
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    'Authorization',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=60),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

AUTH_USER_MODEL = 'custom_user.CustomUser'#CustomUser modelimizin adı
ACCOUNT_AUTHENTICATION_METHOD = 'email' #Oturum açmak için email adresi kullanmak için
ACCOUNT_EMAIL_REQUIRED = True #kullanıcılardan email adresi istenmesi
ACCOUNT_UNIQUE_EMAIL = True #her email adresi bir kez kaydedilebilir
ACCOUNT_USERNAME_REQUIRED = False #kullanıcılardan username istenmemesi
ACCOUNT_USER_EMAIL_FIELD = 'email' #email adresinin kullanıcı adı olarak kullanılması

ROOT_URLCONF = 'mytasks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mytasks.wsgi.application'
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True
STATIC_URL = '/static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


Tabanlı olarak iş planınızı aşağıdaki gibi oluşturabilirim:

+1. Backend projesini çalıştır.
+2. Django ve Django REST Framework'ün doğru bir şekilde kurulduğunu doğrula.
+3. 'asgiref', 'django-cors-headers', 'djangorestframework-simplejwt', 'PyJWT', 'pytz', 'sqlparse' ve 'tzdata' gibi gerekli paketlerin kurulumunu kontrol et.
+4. requirements.txt dosyasını kontrol et ve eksik olan paketleri yükle.
+5. Django uygulamalarının doğru bir şekilde settings.py dosyasında tanımlandığını kontrol et.
+6. Uygulama modellerinin doğru bir şekilde tanımlandığını kontrol et.
+7. Modellerin birbiriyle doğru ilişkilendirildiğini kontrol et.
+8. API uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+9. API uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+10. API uygulamasının serializers.py dosyasını kontrol et.
+11. API uygulamasının views.py dosyasını kontrol et.
+12. API uygulamasının urls.py dosyasını kontrol et.
+13. API uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+14. Assignment uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+15. Assignment uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+16. Assignment uygulamasının serializers.py dosyasını kontrol et.
+17. Assignment uygulamasının views.py dosyasını kontrol et.
+18. Assignment uygulamasının urls.py dosyasını kontrol et.
+19. Assignment uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+20. Comment uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+21. Comment uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+22. Comment uygulamasının serializers.py dosyasını kontrol et.
+23. Comment uygulamasının views.py dosyasını kontrol et.
+24. Comment uygulamasının urls.py dosyasını kontrol et.
+25. Comment uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+26. Company uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+27. Company uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+28. Company uygulamasının serializers.py dosyasını kontrol et.
+29. Company uygulamasının views.py dosyasını kontrol et.
+30. Company uygulamasının urls.py dosyasını kontrol et.
+31. Company uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+32. Custom User uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+33. Custom User uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+34. Custom User uygulamasının serializers.py dosyasını kontrol et.
+35. Custom User uygulamasının views.py dosyasını kontrol et.
+36. Custom User uygulamasının urls.py dosyasını kontrol et.
+37. Custom User uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+38. Kanban uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+39. Kanban uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+40. Kanban uygulamasının serializers.py dosyasını kontrol et.
+41. Kanban uygulamasının views.py dosyasını kontrol et.
+42. Kanban uygulamasının urls.py dosyasını kontrol et.
+43. Kanban uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+44. Notification uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+45. Notification uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+46. Notification uygulamasının serializers.py dosyasını kontrol et.
+47. Notification uygulamasının views.py dosyasını kontrol et.
+48. Notification uygulamasının urls.py dosyasını kontrol et.
+49. Notification uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+50. Project uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+51. Project uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+52. Project uygulamasının serializers.py dosyasını kontrol et.
+53. Project uygulamasının views.py dosyasını kontrol et.
+54. Project uygulamasının urls.py dosyasını kontrol et.
+55. Project uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+56. Rating uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+57. Rating uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+58. Rating uygulamasının serializers.py dosyasını kontrol et.
+59. Rating uygulamasının views.py dosyasını kontrol et.
+60. Rating uygulamasının urls.py dosyasını kontrol et.
+61. Rating uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
+62. Role uygulamasının doğru bir şekilde tanımlandığını kontrol et.
+63. Role uygulamasındaki modellerin doğru bir şekilde tanımlandığını kontrol et.
+64. Role uygulamasının serializers.py dosyasını kontrol et.
+65. Role uygulamasının views.py dosyasını kontrol et.
+66. Role uygulamasının urls.py dosyasını kontrol et.
+67. Role uygulamasında kimlik doğrulama için gereken ayarlamaları yap.
68. DB'nin doğru bir şekilde ayarlandığını ve çalıştığını kontrol et.
+69. CORS ayarlarını kontrol et.
+70. JWT kimlik doğrulama ayarlarını kontrol et.
71. Tüm uygulamaların testlerini çalıştır ve hataların olup olmadığını kontrol et.
+72. Tüm uygulamaların endpointlerini test et.

Bu liste, genel bir bakış sağlar ve her bir madde, daha detaylı alt görevlere ayrılabilir. 
